  II. Modules
    a. Modules
      Can have no instances.
      Can have no subclasses.
      It is an instance of Module.
      Switches self to current module instance, just like class.
      Provides a place to store and share (mixin) methods.

      # 10.rb

    b. Include
      Creates an invisible class that proxies method lookups to the module
      Makes the class the receiver's immediate superclass.
      Include is a private method.

      # 11.rb
      # ~

    c. Extend
      Adds the invisible class to the receiver's metaclass.
      Extend is a public method.

      # ~
      # 12.rb

    d. Callbacks & ClassMethods
      Modules can define module methods that are called whenever they are included or used to extended.

      # 13.rb

      In order to extend a class when you include a module use the ClassMethods technique.
      
      # 14.rb