= Intro to Ruby Meta-Programming

A collection of notes, codes and various further readings that accompanied the December 12th Hackday event.

= What is Ruby meta-programming?

Using one's understanding of the Ruby object model to create methods in the "right place" based on decisions made at runtime.

Using Ruby's interpreted environment to create code based on runtime decisions.

== Object Model

=== Objects

See 01.rb.

* State and the things that can be done to that state define an object.
* Lots of Person objects can be created each with their own state.
* Every Person has same set of methods.
* Adding/changing a method on the Person class has to apply to all person instances.
* Inefficient to put the methods in the instances.
* Objects contain a pointer to its class that has a list of methods.
* In order to call a method, Ruby looks up class then method.
* Draw classes to the right, so first step to find a method is "go right".

=== Self


== Further Reading

http://ruby-metaprogramming.heroku.com
An online meta-programming course.

http://pragprog.com/screencasts/v-dtrubyom/the-ruby-object-model-and-metaprogramming
Commercial screencasts on meta-programming by Dave Thomas.

http://pragprog.com/titles/ppmetr/metaprogramming-ruby
A whole book on this stuff.

http://yehudakatz.com/2009/11/15/metaprogramming-in-ruby-its-all-about-the-self
A concise summary of meta-programming in Ruby by Yehuda Katz.